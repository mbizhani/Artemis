<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE artemis PUBLIC "-//Devocative.Org//Artemis 1.0//EN"
		"https://devocative.org/dtd/artemis-2.0.dtd">

<artemis>
	<vars>
		<!-- 'cell'     is set in artemis.groovy's 'storeCell()' method-->
		<!-- 'password' is set in artemis.groovy's 'before()' method -->
		<var name="city" value="${Thread.currentThread().getName()}"/>
		<var name="sleep" value="1100"/>
	</vars>

	<scenario id="RegisterUser" sleep="${sleep}">
		<vars>
			<var name="randInt">${Util.generate(3, '1'..'9')}</var>
			<!--
			OR
			<var name="randInt" value="${Util.generate(3, '1'..'9')}"/>
			-->
		</vars>

		<post id="registration" url="/registrations?_p=${rand}" call="true">
			<vars>
				<var name="rand" value="${Util.generate(3, '0'..'9', 'a'..'z')}"/>
			</vars>

			<urlParams>
				<param name="p1" value="${randInt}"/>
				<param name="list" value="l1"/>
				<param name="list" value="l2"/>
			</urlParams>

			<body type="json"><![CDATA[
{
	"name": "Foo\\nBar",
	"cell": "${cell}"
}
			]]></body>

			<assertRs status="200" body="empty" call="true"/>
		</post>

		<get id="fetchCode" url="/registrations/${cell}">
			<urlParams>
				<param name="p1" value="${randInt}"/>
			</urlParams>

			<assertRs status="200" properties="smsCode" cookies="Cookie1,Cookie2" call="true"/>
		</get>

		<put id="verify" url="${backEnd}/registrations">
			<when message="Oops!">fetchCode.rs.smsCode != null</when>
			<body><![CDATA[
{
	"smsCode": "${_prev.rs.smsCode}",
	"password": "${password}"
}
			]]></body>

			<assertRs status="201" properties="token,userId,nullProp" store="token" call="true"/>
		</put>

		<put url="/users/${verify.rs.userId}">
			<headers>
				<header name="Authorization" value="${verify.rs.token}"/>
			</headers>

			<form>
				<field name="city" value="${city}"/>
				<field name="email" value="a@a.com"/>
				<field name="logo" value="picture.jpg" file="true"/>
				<field name="groups" value="g1"/>
				<field name="groups" value="g2"/>
				<field name="groups" value="g3"/>
			</form>

			<assertRs status="200" body="empty"/>
		</put>
	</scenario>

	<scenario id="Login" parallel="${parallelLogin}" loop="${loopLogin}">
		<get url="/login/${cell}">
			<headers>
				<header name="Authorization" value="${verify.rs.token}"/>
			</headers>

			<assertRs status="200" properties="smsCode"/>
		</get>

		<post id="login" url="${backEnd}/login">
			<body><![CDATA[
{
	"cell": "${cell}",
	"password": "${password}",
	"smsCode": "${_prev.rs.smsCode}"
}
			]]></body>

			<assertRs status="200" properties="token" call="true"/>
		</post>
	</scenario>
</artemis>
